name: Build and Deploy Frieren RAG

on:
    push:
        branches:
            - main # Or your production branch

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest # Use a standard runner image

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "18" # Match the Node.js version in your Dockerfile

            - name: Install dependencies
              run: npm ci # Use npm ci for clean installs in CI

            # Add linting and testing steps here if you have them
            - name: Run lint (if applicable)
              # run: npm run lint # Uncomment if you have a lint script
              run: echo "Skipping lint (add npm run lint if needed)"

            - name: Run tests (if applicable)
              # run: npm test # Uncomment if you have a test script
              run: echo "Skipping tests (add npm test if needed)"

            - name: Build TypeScript
              run: npm run build # Compile your TypeScript code

            - name: Log in to Docker Registry
              uses: docker/login-action@v3
              with:
                  registry: your_docker_registry_url # e.g., docker.io, ghcr.io, registry.gitlab.com
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Build and push Docker image
              uses: docker/build-push-action@v5
              with:
                  context: . # Build context is the root of the repo
                  push: true
                  tags: |
                      your_docker_registry_url/your_username/frieren-rag:${{ github.sha }} # Tag with commit SHA
                      your_docker_registry_url/your_username/frieren-rag:latest # Tag with latest
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

            - name: Deploy to VPS
              uses: appleboy/ssh-action@v1.0.3 # A common action for SSH deployments
              with:
                  host: ${{ secrets.VPS_SSH_HOST }}
                  username: ${{ secrets.VPS_SSH_USER }}
                  key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
                  script: |
                      # Navigate to your deployment directory on the VPS
                      cd ~/frieren_rag_deployment

                      # Pull the latest image
                      # Note: Using 'latest' tag here. Consider using the specific commit SHA tag instead for robustness.
                      docker-compose pull app

                      # Stop, remove old container, and start new one
                      # This causes brief downtime. See production notes below for zero-downtime.
                      docker-compose down app || true # Stop and remove if running, tolerate if not
                      # Or more explicitly:
                      # docker-compose stop app || true
                      # docker-compose rm -f app || true

                      docker-compose up -d app

                      echo "Deployment command executed on VPS."
